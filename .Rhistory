colnames(site_metadata.scaled.names) = bioclim_var_names
climate.factoPCA = FactoMineR::PCA(
site_metadata.scaled,
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
climate.factoPCA = FactoMineR::PCA(
site_metadata.scaled.names,
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
plot(climate.factoPCA, choix  = "var", axes = c(1,2))
plot(climate.factoPCA, choix  = "var", axes = c(1,2))
plot(climate.factoPCA, choix  = "var", axes = c(1,3))
str(climate.factoPCA)
climate.factoPCA$var$contrib
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA, choice = "var", axes = 1, top = 20)
plot(climate.factoPCA, choix  = "var", axes = c(1,2))
plot(climate.factoPCA, choix  = "var", axes = c(1,3))
str(climate.factoPCA)
climate.factoPCA$var$contrib
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA, choice = "var", axes = 1, top = 20)
# temp seasonality and precip; temp of driest (+), annual precip (+), temp seasonality (-), precip wettest (+),
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA, choice = "var", axes = 2, top = 20)
# temp; temp warmest quarter and month, MAT
fviz_contrib(climate.factoPCA, choice = "ind", axes = 2, top = 24)
# Contributions of variables to PC3
fviz_contrib(climate.factoPCA, choice = "var", axes = 3, top = 20)
# temp wettest and precip seasonality
fviz_contrib(climate.factoPCA, choice = "ind", axes = 3, top = 24)
# Contributions of variables to PC4
fviz_contrib(climate.factoPCA, choice = "var", axes = 4, top = 20)
# this is very clearly a temp variatino axis; diurnal range is top by a lot
# then isothermality (diurnal range/annual range)
fviz_contrib(climate.factoPCA, choice = "ind", axes = 4, top = 24)
# Contributions of variables to PC4
fviz_contrib(climate.factoPCA, choice = "var", axes = 4, top = 20)
# this is very clearly a temp variatino axis; diurnal range is top by a lot
# then isothermality (diurnal range/annual range)
fviz_contrib(climate.factoPCA, choice = "ind", axes = 4, top = 24)
# Contributions of variables to PC5
fviz_contrib(climate.factoPCA, choice = "var", axes = 5, top = 20)
# temp of wettest by far strongest
# then temp driest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 5, top = 24)
######################################
######################################
#pairwise cors
site_metadata.scaled
cor(site_metadata.scaled)
pairs(site_metadata.scaled)
p1 = ggpairs(
site_metadata.scaled,
columns = 1:ncol(site_metadata.scaled)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p1
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
#keeping mean temp wettest out becasue it is highly ocrreltated wiuth precip seasonality
site_metadata.scaled.names
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.temps, choice = "var", axes = 1, top = 20)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(2,8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
site_metadata.scaled.names
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# MAP and precip of driest,coldest, wettest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 2, top = 20)
# seasonality
fviz_contrib(climate.factoPCA, choice = "ind", axes = 2, top = 24)
PC.df = data.frame(
temp.PC1 = climate.factoPCA.temps$ind$coord[,1],
temp.PC2 = climate.factoPCA.temps$ind$coord[,2],
precip.PC1 = climate.factoPCA.precip$ind$coord[,1],
precip.PC2 = climate.factoPCA.precip$ind$coord[,2],
bio2 = site_metadata.scaled.names[,2]
)
# look at cors between new vars
cor(PC.df)
pairs(PC.df)
p2 = ggpairs(
PC.df,
columns = 1:ncol(PC.df)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# MAP and precip of driest,coldest, wettest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 2, top = 20)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# MAP and precip of driest,coldest, wettest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 2, top = 20)
# seasonality
fviz_contrib(climate.factoPCA, choice = "ind", axes = 2, top = 24)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
PC.df = data.frame(
temp.PC1 = climate.factoPCA.temps$ind$coord[,1],
#temp.PC2 = climate.factoPCA.temps$ind$coord[,2],
precip.PC1 = climate.factoPCA.precip$ind$coord[,1],
precip.PC2 = climate.factoPCA.precip$ind$coord[,2],
bio2 = site_metadata.scaled.names[,2]
)
# look at cors between new vars
cor(PC.df)
pairs(PC.df)
p2 = ggpairs(
PC.df,
columns = 1:ncol(PC.df)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
pdf("figures/GxE/Nf_sites.bioclim_PCA.pairs_cor.no_WV_no_NC.pdf", width = 16, height = 16)
p1
dev.off()
p2 = ggpairs(
PC.df,
columns = 1:ncol(PC.df)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
PC.df
write.csv(PC.df, "data/sample_metadata/Nf.sites_bioclim_PC.no_WV_no_NC.csv", row.names = F, quote = F)
climate.factoPCA$eig
climate.factoPCA.precip$eig
climate.factoPCA.temps
climate.factoPCA.temps$eig
q(save="no")
library(vegan)
library(dplyr)
library(ggplot2)
library(GGally)
source("library/ggplot_theme.txt")
library(FactoMineR)
library(factoextra)
#Join pops to site data
site.info = read.csv("data/sample_metadata/site_info.csv")
site.bioclim = read.csv("data/sample_metadata/Nf.site_bioclim.csv")
site.bioclim = site.bioclim %>% filter(state != "WV")
source("data/sample_metadata/world_clim/bioclim_names.txt")
bioclim_var_names
# can pull in dur inf
site_bioclim_w_dur_inf = left_join(
site.bioclim,
site.info %>% select(state, lat, lon, duration_infection),
by = c("state", "lat", "lon")
) %>% unique()
nrow(site_bioclim_w_dur_inf)
#scale the vars
site_metadata.scaled = apply(
site.bioclim %>%
select(-c(state, lat, lon)),
2,
scale
) %>% as.data.frame
rownames(site_metadata.scaled) = site.bioclim$state
head(site_metadata.scaled)
#run princomp
climate.pca = capscale(site_metadata.scaled ~ 1, distance = "euclidean")
str(climate.pca)
plot(climate.pca$CA$eig/sum(climate.pca$CA$eig) )
climate.pca$CA$eig/sum(climate.pca$CA$eig)
sum((climate.pca$CA$eig/sum(climate.pca$CA$eig))[1:2])
#First two axes contain  0.7694971
sum((climate.pca$CA$eig/sum(climate.pca$CA$eig))[1:3])
#First three axes contain  0.8960131
sum((climate.pca$CA$eig/sum(climate.pca$CA$eig))[1:5])
biplot(climate.pca)
biplot(climate.pca, choices = c(1,3))
biplot(climate.pca, choices = c(2,3))
######################################
######################################
######################################
# Compare to FactoMineR
######################################
######################################
site.bioclim = read.csv("data/sample_metadata/Nf.site_bioclim.csv")
site.bioclim = site.bioclim %>% filter(state != "WV")
site_metadata.scaled = apply(
site.bioclim %>%
select(-c(state, lat, lon)),
2,
scale
) %>% as.data.frame
site_metadata.scaled.names = site_metadata.scaled
colnames(site_metadata.scaled.names) = bioclim_var_names
climate.factoPCA = FactoMineR::PCA(
site_metadata.scaled,
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
climate.factoPCA = FactoMineR::PCA(
site_metadata.scaled.names,
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
plot(climate.factoPCA, choix  = "var", axes = c(1,2))
plot(climate.factoPCA, choix  = "var", axes = c(1,3))
str(climate.factoPCA)
climate.factoPCA$var$contrib
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA, choice = "var", axes = 1, top = 20)
# temp seasonality and precip; temp of driest (+), annual precip (+), temp seasonality (-), precip wettest (+),
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA, choice = "var", axes = 2, top = 20)
# temp; temp warmest quarter and month, MAT
fviz_contrib(climate.factoPCA, choice = "ind", axes = 2, top = 24)
# Contributions of variables to PC3
fviz_contrib(climate.factoPCA, choice = "var", axes = 3, top = 20)
# temp wettest and precip seasonality
fviz_contrib(climate.factoPCA, choice = "ind", axes = 3, top = 24)
# Contributions of variables to PC4
fviz_contrib(climate.factoPCA, choice = "var", axes = 4, top = 20)
# this is very clearly a temp variatino axis; diurnal range is top by a lot
# then isothermality (diurnal range/annual range)
fviz_contrib(climate.factoPCA, choice = "ind", axes = 4, top = 24)
# Contributions of variables to PC5
fviz_contrib(climate.factoPCA, choice = "var", axes = 5, top = 20)
# temp of wettest by far strongest
# then temp driest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 5, top = 24)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.temps, choice = "var", axes = 1, top = 20)
# cold temps and the amount of seasonal/annual variability
fviz_contrib(climate.factoPCA.temps, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.temps, choice = "var", axes = 2, top = 20)
# temps pca
climate.factoPCA.temps = FactoMineR::PCA(
site_metadata.scaled.names[,c(1,3:7,9:11)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# MAP and precip of driest,coldest, wettest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# precip pca
climate.factoPCA.precip = FactoMineR::PCA(
site_metadata.scaled.names[,c(8,12:19)],
scale.unit = F, #already scaled
ncp = 5#the def is five, which is OK for this dataset, but may want more
)
# Contributions of variables to PC1
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 1, top = 20)
# MAP and precip of driest,coldest, wettest
fviz_contrib(climate.factoPCA, choice = "ind", axes = 1, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 2, top = 20)
# seasonality
fviz_contrib(climate.factoPCA, choice = "ind", axes = 2, top = 24)
# Contributions of variables to PC2
fviz_contrib(climate.factoPCA.precip, choice = "var", axes = 2, top = 20)
PC.df = data.frame(
temp.PC1 = climate.factoPCA.temps$ind$coord[,1],
#temp.PC2 = climate.factoPCA.temps$ind$coord[,2],
precip.PC1 = climate.factoPCA.precip$ind$coord[,1],
precip.PC2 = climate.factoPCA.precip$ind$coord[,2],
bio2 = site_metadata.scaled.names[,2]
)
# look at cors between new vars
cor(PC.df)
pairs(PC.df)
p2 = ggpairs(
PC.df,
columns = 1:ncol(PC.df)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
pdf("figures/GxE/Nf_sites.bioclim_PCA_temp_precip_separate.pairs_cor.no_WV.pdf", width = 16, height = 16)
p1
p2
dev.off()
PC.df
PC.df$state = rownames(PC.df)
write.csv(PC.df, "data/sample_metadata/Nf.sites_bioclim_PC.no_WV.csv", row.names = F, quote = F)
climate.factoPCA$eig
PC.df
PC.df
climate.factoPCA.temps$ind$coord[,1]
climate.factoPCA.temps$ind$coord
site_metadata.scaled
site_metadata
site_metadata.scaled.names
site_bioclim_w_dur_inf
site.bioclim
PC.df$state = site.bioclim$state
write.csv(PC.df, "data/sample_metadata/Nf.sites_bioclim_PC.no_WV.csv", row.names = F, quote = F)
PC.df
q(save="no")
library(dplyr)
##################################
pca_clust = read.csv("data/sample_metadata/Nf_filtered.HCPC_clust.csv")
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
pca_clust$HCPC.cluster = paste0("clust_", pca_clust$HCPC.cluster)
pca_clust
pca_clust.2 = pca_clust %>% filter(HCPC.cluster == "clust_2")
write.table(pca_clust.2, "data/sample_metadata/Nf_pixy_pops.HCPC_cluster2.txt", sep = "\t", col.names = F, row.names = F, quote = F)
head(sample_metadata.Nf)
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% filter(
state != "NC"
) -> pca_clust.2.noNC
nrow(pca_clust.2.noNC)
nrow(pca_clust.2)
pca_clust.2.noNC
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% filter(
state != "NC"
) %>% select(
-state
) -> pca_clust.2.noNC
nrow(pca_clust.2.noNC)
nrow(pca_clust.2)
pca_clust.2.noNC
write.table(pca_clust.2, "data/sample_metadata/Nf_pixy_pops.HCPC_cluster2_noNC.txt", sep = "\t", col.names = F, row.names = F, quote = F)
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% select(
-HCPC.cluster
) -> pca_clust.2.statePop
nrow(pca_clust.2.statePop)
head(pca_clust.2.statePop)
source("~/repo/neonectria_SNP/GxE/pixy_scan/companion_files.R", echo=TRUE)
##################################
pca_clust = read.csv("data/sample_metadata/Nf_filtered.HCPC_clust.csv")
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
pca_clust$HCPC.cluster = paste0("clust_", pca_clust$HCPC.cluster)
pca_clust.2 = pca_clust %>% filter(HCPC.cluster == "clust_2")
write.table(pca_clust.2, "data/sample_metadata/Nf_pixy_pop.cluster2_single_pop.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% filter(
state != "NC"
) %>% select(
-state
) -> pca_clust.2.noNC
nrow(pca_clust.2.noNC)
nrow(pca_clust.2)
write.table(pca_clust.2.noNC, "data/sample_metadata/Nf_pixy_pop.cluster2_noNC_single_pop.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% select(
-HCPC.cluster
) -> pca_clust.2.statePop
nrow(pca_clust.2.statePop)
head(pca_clust.2.statePop)
write.table(pca_clust.2.statePop, "data/sample_metadata/Nf_pixy_pop.cluster2_site_pops.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
left_join(
pca_clust.2,
sample_metadata.Nf %>% select(Sequence_label, state)
) %>% filter(
state != "NC"
) %>% select(
-HCPC.cluster
) -> pca_clust.2.noNC.statePop
nrow(pca_clust.2.noNC.statePop)
head(pca_clust.2.noNC.statePop)
write.table(pca_clust.2.noNC.statePop, "data/sample_metadata/Nf_pixy_pop.cluster2_noNC_site_pops.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
q(save="no")
