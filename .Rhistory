) +
xlim(0,NA) +
geom_point(alpha = 0.15, size = 0.5) +
scale_y_log10(breaks = c(1,10,10^2,10^3,10^4,10^5)) +
facet_wrap(~factor(scaffold, levels = scf_order), scales = "free", ncol = 2) +
labs(x = "Position (Kb)", y = "distance n:n-1 (bp)") +
theme_bw()
p1
png("figures/GxE/RDA/SNP_distance.wNC.NAlt5perc_and_MACgt5perc.png", width = 2160, height = 1400, res = 150)
p1
dev.off()
p1 = ggplot(
SNP_pos.noNC.filteredMAC %>%
group_by(scaffold) %>%
arrange(position) %>%
mutate(diff = position - lag(position, default = first(0)) )
,
aes(
x = position/10^3,
y = diff
)
) +
xlim(0,NA) +
geom_point(alpha = 0.15, size = 0.5) +
scale_y_log10(breaks = c(1,10,10^2,10^3,10^4,10^5)) +
facet_wrap(~factor(scaffold, levels = scf_order), scales = "free", ncol = 2) +
labs(x = "Position (Kb)", y = "distance n:n-1 (Kb)") +
theme_bw()
p1
p1 = ggplot(
SNP_pos.noNC.filteredMAC %>%
group_by(scaffold) %>%
arrange(position) %>%
mutate(diff = position - lag(position, default = first(0)) )
,
aes(
x = position/10^3,
y = diff
)
) +
xlim(0,NA) +
geom_point(alpha = 0.15, size = 0.5) +
scale_y_log10(breaks = c(1,10,10^2,10^3,10^4,10^5)) +
facet_wrap(~factor(scaffold, levels = scf_order), scales = "free", ncol = 2) +
labs(x = "Position (Kb)", y = "distance n:n-1 (bb)") +
theme_bw()
p1
png("figures/GxE/RDA/SNP_distance.noNC.NAlt5perc_and_MACgt5perc.png", width = 2160, height = 1400, res = 150)
p1
dev.off()
sample_ids.noNC
write.csv(Y.noNC.filteredMAC, "data/Nf/GxE/RDA/Y.noNC.filteredMAC.csv", row.names = F)
write.csv(Y.wNC.filteredMAC, "data/Nf/GxE/RDA/Y.wNC.filteredMAC.csv", row.names = F)
write.csv(SNP_pos.noNC.filteredMAC, "data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv", row.names = F)
write.csv(SNP_pos.wNC.filteredMAC, "data/Nf/GxE/RDA/SNP_pos.wNC.filteredMAC.csv", row.names = F)
write.csv(sample_ids.noNC, "data/Nf/GxE/RDA/sample_ids.noNC.csv", row.names = F, col.names = F)
write.table(sample_ids.noNC, "data/Nf/GxE/RDA/sample_ids.noNC.csv", row.names = F, col.names = F)
write.table(sample_ids.wNC, "data/Nf/GxE/RDA/sample_ids.wNC", row.names = F, col.names = F)
write.table(sample_ids.noNC, "data/Nf/GxE/RDA/sample_ids.noNC", row.names = F, col.names = F)
write.csv(Y.noNC.filteredMAC, "data/Nf/GxE/RDA/Y.noNC.filteredMAC.csv", row.names = F, quote = F)
write.csv(Y.wNC.filteredMAC, "data/Nf/GxE/RDA/Y.wNC.filteredMAC.csv", row.names = F, quote = F)
write.csv(SNP_pos.noNC.filteredMAC, "data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv", row.names = F, quote = F)
write.csv(SNP_pos.wNC.filteredMAC, "data/Nf/GxE/RDA/SNP_pos.wNC.filteredMAC.csv", row.names = F, quote = F)
write.table(sample_ids.noNC, "data/Nf/GxE/RDA/sample_ids.noNC", row.names = F, col.names = F, quote = F)
write.table(sample_ids.wNC, "data/Nf/GxE/RDA/sample_ids.wNC", row.names = F, col.names = F, quote = F)
write.table(Y.noNC.filteredMAC, "data/Nf/GxE/RDA/Y.noNC.filteredMAC.tsv", row.names = F, col.names = F, quote = F)
write.table(Y.wNC.filteredMAC, "data/Nf/GxE/RDA/Y.wNC.filteredMAC.tsv", row.names = F, col.names = F, quote = F)
write.table(Y.noNC.filteredMAC, "data/Nf/GxE/RDA/Y.noNC.filteredMAC.tsv", row.names = F, col.names = F, quote = F, sep = "\t")
write.table(Y.wNC.filteredMAC, "data/Nf/GxE/RDA/Y.wNC.filteredMAC.tsv", row.names = F, col.names = F, quote = F, sep = "\t")
q(save="no")
Y = read.table("data/Nf/GxE/RDA/Y.noNC.filteredMAC.tsv", header = F, sep = "\t")
SNP_pos = read.csv("data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv", row.names = F, quote = F)
SNP_pos = read.csv("data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv")
sample_ids = read.table("data/Nf/GxE/RDA/sample_ids.noNC", header = F)
sample_ids
library(vegan)
library(dplyr)
Y = read.table("data/Nf/GxE/RDA/Y.noNC.filteredMAC.tsv", header = F, sep = "\t")
SNP_pos = read.csv("data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv")
sample_ids = read.table("data/Nf/GxE/RDA/sample_ids.noNC", header = F)
#read site metadata
site.info = read.csv("data/sample_metadata/site_info.csv")
site.bioclim = read.csv("data/sample_metadata/Nf.site_bioclim.csv")
site.bioclim = site.bioclim %>% filter(state != "WV" & state != "NC")
site.bioclim
site_metadata = left_join(
site.bioclim,
site.info %>% select(state, lat, lon, duration_infection),
by = c("state", "lat", "lon")
) %>% unique() %>% left_join(
., site.bioclim.PC %>% select(-bio2),
by = "state"
)
site_metadata = left_join(
site.bioclim,
site.info %>% select(state, lat, lon, duration_infection),
by = c("state", "lat", "lon")
) %>% unique()
site_metadata
#sample metadata. Needs to be sorted by sampleIDs
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
rownames(sample_metadata.Nf) = sample_metadata.Nf$Sequence_label
sample_metadata.Nf.sorted = sample_metadata.Nf[sample_ids$V1,]
nrow(sample_metadata.Nf.sorted)
sample_metadata.site_info = left_join(sample_metadata.Nf.sorted, site_metadata)
is.na(sample_metadata.site_info$bio1) %>% sum()
row_ids = which(sample_ids$V1 %in% sample_metadata.site_info$Sequence_label)
row_ids
head(sample_metadata.Nf.sorted)
head(sample_metadata.site_info)
X = sample_metadata.site_info %>%
select(starts_with("bio"), duration_infection)
X
###########################################
# examining which vars need to be excluded
#
#scale the vars
X.uniq = X %>% unique()
nrow(X.uniq)
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
site_metadata.scaled
p1 = ggpairs(
site_metadata.scaled,
columns = 1:ncol(site_metadata.scaled)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
library(ggplot2)
library(GGally)
source("library/ggplot_theme.txt")
p1 = ggpairs(
site_metadata.scaled,
columns = 1:ncol(site_metadata.scaled)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
p1
#bio1 has high correlation with every temp var except bio2 and bio8
ggpairs(
site_metadata.scaled %>%
select(-bio1),
columns = 1:ncol(site_metadata.scaled)#,
#    columnLabels = bioclim_var_names
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
#bio1 has high correlation with every temp var except bio2 and bio8
ggpairs(
site_metadata.scaled %>%
select(-bio1),
columns = 1:ncol(site_metadata.scaled) %>%
select(-bio1)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
#bio1 has high correlation with every temp var except bio2 and bio8
ggpairs(
site_metadata.scaled %>%
select(-bio1),
columns = 1:ncol(site_metadata.scaled %>%
select(-bio1))
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
source("data/sample_metadata/world_clim/bioclim_names.txt")
bioclim_var_names
cor(site_metadata.scaled)
varcors = cor(site_metadata.scaled)
varcors > 0.7
rowSums(varcors > 0.7)
sort(rowSums(varcors > 0.7))
bioclim_var_names
# we can start with removing bio1, bio11, bio12 first
# we keep bio6 for now (min temp coldest month) bc it may be biologically important
site_metadata.scaled.reduced = site_metadata.scaled %>%
select(-bio1, -bio11, -bio12)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(varcors > 0.7))
varcors
bioclim_var_names
sort(rowSums(varcors > 0.7))
# lets remove the quarter estimates (wettest is one of the highest cors now)
# these are repettive with the -est month measures
# remove bio16, bio17, bio10
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio16, -bio17, -bio10)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(varcors > 0.7))
bioclim_var_names
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
bioclim_var_names[names(sort(rowSums(varcors > 0.7)))]
bioclim_var_names[names(rowSums(varcors > 0.7))]
sort(rowSums(varcors > 0.7))
sort(rowSums(varcors > 0.7))
rowSums(varcors > 0.7)
varcors > 0.7)
varcors
bioclim_var_names[names(rowSums(varcors > 0.7))]
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(varcors > 0.7))
sort(rowSums(varcors > 0.7))
# bio3 and 4 correlted with each other
# lets go with isothermaility (bio3)
# bio 5 with bio 6 only (0.7)
# bio 7 with bio 3,4,6,9
# let's go with -bio9
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio4, -bio9)
varcors = cor(site_metadata.scaled.reduced)
varcors
sort(rowSums(-0.7 < varcors > 0.7))
sort(rowSums(abs(varcors) > 0.7))
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
varcors = cor(site_metadata.scaled)
sort(rowSums(abs(varcors) > 0.7))
# we can start with removing bio1, bio11, bio12 first
# we keep bio6 for now (min temp coldest month) bc it may be biologically important
site_metadata.scaled.reduced = site_metadata.scaled %>%
select(-bio16, -bio11, -bio12)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
varcors = cor(site_metadata.scaled)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# we can start with removing bio1, bio11, bio12 first
# we keep bio6 for now (min temp coldest month) bc it may be biologically important
site_metadata.scaled.reduced = site_metadata.scaled %>%
select(-bio1, -bio11, -bio12)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# lets remove the quarter estimates (wettest is one of the highest cors now)
# these are repettive with the -est month measures
# remove bio16, bio17, bio10
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio16, -bio17, -bio10)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names[names(rowSums(varcors > 0.7))]
# bio3 and 4 correlted with each other
# lets go with isothermaility (bio3)
# bio 5 with bio 6 only (0.7)
# bio 7 with bio 3,4,6,9
# let's go with -bio9
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio4, -bio7)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
varcors
varcors
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
varcors = cor(site_metadata.scaled)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# we can start with removing bio1, bio11, bio12 first
# we keep bio6 for now (min temp coldest month) bc it may be biologically important
site_metadata.scaled.reduced = site_metadata.scaled %>%
select(-bio1, -bio11, -bio12)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# lets remove the quarter estimates (wettest is one of the highest cors now)
# these are repettive with the -est month measures
# remove bio16, bio17, bio10
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio16, -bio17, -bio10)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names[names(rowSums(varcors > 0.7))]
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
# bio3 and 4 correlted with each other
# lets go with isothermaility (bio3)
# bio 5 with bio 6 only (0.7)
# bio 7 with bio 3,4,6,9
# let's go with -bio6
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio6)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio4, -bio7)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
bioclim_var_names
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio19)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
bioclim_var_names[names(rowSums(varcors > 0.7))]
# last to deal with is precip seasonality versus precip direst month
# we also have precip wettest month included and these are easier to interpret
# than how precip is distrbuted throughout the year
# we exclude bio 15
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio15)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
bioclim_var_names[names(rowSums(varcors > 0.7))]
p1 = ggpairs(
site_metadata.scaled.reduced,
columns = 1:ncol(site_metadata.scaled.reduced)
) +
my_gg_theme.def_size +
theme(
axis.text.x = element_text(angle = 55, hjust = 1)
)
pdf("figures/GxE/RDA/pairs_cor.no_NC.pdf", width = 16, height = 16)
p1
dev.off()
varcors
X.uniq
X[,names(varcors)]
names(varcors)
varcors
X[,rownames(varcors)]
Y.rda <- rda(Y~ ., data=X[,rownames(varcors)], scale=T)
Y.rda
RsquareAdj(Y.rda)
#The eigenvalues for the constrained axes reflect the variance explained by each canonical axis:
summary(eigenvals(wolf.rda, model = "constrained"))
#The eigenvalues for the constrained axes reflect the variance explained by each canonical axis:
summary(eigenvals(Y.rda, model = "constrained"))
# We can visualize this information using a screeplot of the canonical eigenvalues by calling screeplot:
screeplot(Y.rda)
#Now let’s check our RDA model for significance using formal tests. We can assess both the full model and each constrained axis using F-statistics (Legendre et al, 2010).
signif.full <- anova.cca(Y.rda, parallel=getOption("mc.cores")) # default is permutation=999
signif.full
start.time <- Sys.time()
signif.axis <- anova.cca(wolf.rda, by="axis", parallel=getOption("mc.cores"))
start.time <- Sys.time()
signif.axis <- anova.cca(Y.rda, by="axis", parallel=getOption("mc.cores"))
q(sve="no")
q(save="no")
library(vegan)
library(dplyr)
library(ggplot2)
library(GGally)
source("library/ggplot_theme.txt")
Y = read.table("data/Nf/GxE/RDA/Y.noNC.filteredMAC.tsv", header = F, sep = "\t")
SNP_pos = read.csv("data/Nf/GxE/RDA/SNP_pos.noNC.filteredMAC.csv")
sample_ids = read.table("data/Nf/GxE/RDA/sample_ids.noNC", header = F)
#read site metadata
site.info = read.csv("data/sample_metadata/site_info.csv")
site.bioclim = read.csv("data/sample_metadata/Nf.site_bioclim.csv")
site.bioclim = site.bioclim %>% filter(state != "WV" & state != "NC")
site.bioclim
source("data/sample_metadata/world_clim/bioclim_names.txt")
bioclim_var_names
############################
# setting up metadata
site_metadata = left_join(
site.bioclim,
site.info %>% select(state, lat, lon, duration_infection),
by = c("state", "lat", "lon")
) %>% unique()
#sample metadata. Needs to be sorted by sampleIDs
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
rownames(sample_metadata.Nf) = sample_metadata.Nf$Sequence_label
sample_metadata.Nf.sorted = sample_metadata.Nf[sample_ids$V1,]
nrow(sample_metadata.Nf.sorted)
sample_metadata.site_info = left_join(sample_metadata.Nf.sorted, site_metadata)
is.na(sample_metadata.site_info$bio1) %>% sum()
row_ids = which(sample_ids$V1 %in% sample_metadata.site_info$Sequence_label)
head(sample_metadata.site_info)
X = sample_metadata.site_info %>%
select(starts_with("bio"), duration_infection)
X
###########################################
# examining which vars need to be excluded
#
#scale the vars
X.uniq = X %>% unique()
nrow(X.uniq)
site_metadata.scaled = apply(
X.uniq,
2,
scale
) %>% as.data.frame
varcors = cor(site_metadata.scaled)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# we can start with removing bio1, bio11, bio12 first
# we keep bio6 for now (min temp coldest month) bc it may be biologically important
site_metadata.scaled.reduced = site_metadata.scaled %>%
select(-bio1, -bio11, -bio12)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names
# lets remove the quarter estimates (wettest is one of the highest cors now)
# these are repettive with the -est month measures
# remove bio16, bio17, bio10
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio16, -bio17, -bio10)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
bioclim_var_names[names(rowSums(varcors > 0.7))]
# bio3 and 4 correlted with each other
# lets go with isothermaility (bio3)
# bio 5 with bio 6 only (0.7)
# bio 7 with bio 3,4,6,9
# let's go with -bio6
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio6)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio4, -bio7)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio19)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
# last to deal with is precip seasonality versus precip direst month
# we also have precip wettest month included and these are easier to interpret
# than how precip is distrbuted throughout the year
# we exclude bio 15
site_metadata.scaled.reduced = site_metadata.scaled.reduced %>%
select(-bio15)
varcors = cor(site_metadata.scaled.reduced)
sort(rowSums(abs(varcors) > 0.7))
X[,rownames(varcors)]
#https://popgen.nescent.org/2018-03-27_RDA_GEA.html
#
Y.rda <- rda(Y~ ., data=X[,rownames(varcors)], scale=T)
signif.axis <- anova.cca(wolf.rda, by="axis", parallel=getOption("mc.cores"))
start.time <- Sys.time()
signif.axis <- anova.cca(Y.rda, by="axis", parallel=getOption("mc.cores"))
q(save="no")
