) +
geom_bar() +
theme_classic() +
labs(x = "Locus mean DP\n(values of above 100 excluded)") +
scale_x_continuous(limits = c(0,100), breaks = c(seq(0,50,5),75,100))
p3
mean(locus_dp_mean) + (2*sd(locus_dp_mean))
mean(locus_dp_mean) + (2*sd(locus_dp_mean))
p2
gt
ind_na
p1
p2 = ggplot(
ind_stats,
aes(y = ind_na*100, x = reorder(ind_names, ind_na))
) +
geom_col() +
theme_classic() +
labs( y = "Individual % missing") +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_blank()
)
p2
range(locus_dp_mean)
6.802721e-03
median(locus_dp_mean)
mean(locus_dp_mean)
sd(locus_dp_mean)
mean(locus_dp_mean) + (2*sd(locus_dp_mean))
mean(locus_dp_mean) - (2*sd(locus_dp_mean))
locus_dp_mean[order(locus_dp_mean, decreasing = T)]
p3 = ggplot(
data.frame(locus_dp_mean = locus_dp_mean),
aes(x = locus_dp_mean)
) +
geom_bar() +
theme_classic() +
labs(x = "Locus mean DP\n(values of above 100 excluded)") +
scale_x_continuous(limits = c(0,100), breaks = c(seq(0,50,5),75,100))
p3
p4 = ggplot(
ind_stats,
aes(y = ind_dp_mean, x = reorder(ind_names, ind_dp_mean))
) +
geom_col() +
theme_classic() +
labs(y = "Individual mean DP") +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_blank()
)
p4
pdf("figures/quality_filtering/shared_buscos/locus.NA_DP.pdf", width = 10, height = 6)
p1
p3
dev.off()
pdf("figures/quality_filtering/shared_buscos/individual.NA_DP.pdf", width = 16, height = 6)
p2
p4
dev.off()
dp.long = pivot_longer(data.frame(dp), names_to = "sample", values_to = "DP", cols = everything())
head(dp.long)
p5 = ggplot(dp.long, aes(x = DP)) +
geom_histogram(binwidth = 5) +
scale_x_continuous(limits = c(0,100)) + #there are a couple samples with a bit over 100 but not worth worrying about
facet_wrap(~sample, ncol = 3) +
my_gg_theme
pdf("figures/quality_filtering/shared_buscos/individual_DP.facets.pdf", width = 8, height = 6)
p5
dev.off()
pdf("figures/quality_filtering/shared_buscos/individual_DP.facets.pdf", width = 24, height = 16)
p5
dev.off()
pdf("figures/quality_filtering/shared_buscos/individual_DP.facets.pdf", width = 60, height = 45)
p5
dev.off()
p5 = ggplot(dp.long, aes(x = DP)) +
geom_histogram(binwidth = 5) +
scale_x_continuous(limits = c(0,100)) + #there are a couple samples with a bit over 100 but not worth worrying about
facet_wrap(~sample, ncol = 6) +
my_gg_theme
pdf("figures/quality_filtering/shared_buscos/individual_DP.facets.pdf", width = 60, height = 45)
p5
dev.off()
p5 = ggplot(dp.long, aes(x = DP)) +
geom_histogram(binwidth = 5) +
scale_x_continuous(limits = c(0,100)) + #there are a couple samples with a bit over 100 but not worth worrying about
facet_wrap(~sample, ncol = 7) +
my_gg_theme
p5 = ggplot(dp.long, aes(x = DP)) +
geom_histogram(binwidth = 5) +
scale_x_continuous(limits = c(0,100)) + #there are a couple samples with a bit over 100 but not worth worrying about
facet_wrap(~sample, nrow = 7) +
my_gg_theme
pdf("figures/quality_filtering/shared_buscos/individual_DP.facets.pdf", width = 60, height = 45)
p5
dev.off()
sample_ids <- extract.gt(vcf, element='DP', as.numeric=TRUE) %>% colnames()
#sample_ids
first_set.ids = paste0("NG", 1:99)
second_set.ids = paste0("NG", 101:163)
third_set.ids = c(
"NG103",
"NG111",
"NG112",
"NG114",
"NG116",
"NG121",
"NG155",
"NG160",
"NG117",
"NG163"
)
second_set.ids = second_set.ids[!second_set.ids %in% third_set.ids]
fourth_set.ids = paste0("NG", 170:196)
fifth_set.ids = paste0("Neco-", 2:6)
lib_one = first_set.ids[first_set.ids %in% sample_ids]
lib_two = second_set.ids[second_set.ids %in% sample_ids]
lib_three = third_set.ids[third_set.ids %in% sample_ids]
lib_four = fourth_set.ids[fourth_set.ids %in% sample_ids]
lib_five = fifth_set.ids[fifth_set.ids %in% sample_ids]
write.table(lib_one, "data/shared_buscos/lib_one_ids.txt", quote = F, row.names = F, col.names = F)
write.table(lib_two, "data/shared_buscos/lib_two_ids.txt", quote = F, row.names = F, col.names = F)
write.table(lib_three, "data/shared_buscos/lib_three_ids.txt", quote = F, row.names = F, col.names = F)
write.table(lib_four, "data/shared_buscos/lib_four_ids.txt", quote = F, row.names = F, col.names = F)
write.table(lib_four, "data/shared_buscos/lib_five_ids.txt", quote = F, row.names = F, col.names = F)
sample_ids
write.table(lib_five, "data/shared_buscos/lib_five_ids.txt", quote = F, row.names = F, col.names = F)
lib_five
first_set.ids = paste0("NG", 1:99)
second_set.ids = paste0("NG", 101:163)
third_set.ids = c(
"NG103",
"NG111",
"NG112",
"NG114",
"NG116",
"NG121",
"NG155",
"NG160",
"NG117",
"NG163"
)
second_set.ids = second_set.ids[!second_set.ids %in% third_set.ids]
fourth_set.ids = paste0("NG", 170:196)
fifth_set.ids = paste0("Neco-", 2:6)
dp.one = dp[,colnames(dp) %in% first_set.ids]
dp.two = dp[,colnames(dp) %in% second_set.ids]
dp.three = dp[,colnames(dp) %in% third_set.ids]
dp.four = dp[,colnames(dp) %in% fourth_set.ids]
dp.five = dp[,colnames(dp) %in% fifth_set.ids]
gt.one = gt[,colnames(gt) %in% first_set.ids]
gt.two = gt[,colnames(gt) %in% second_set.ids]
gt.three = gt[,colnames(gt) %in% third_set.ids]
gt.four = gt[,colnames(gt) %in% fourth_set.ids]
dp.five = dp[,colnames(dp) %in% fifth_set.ids]
dp.one[is.na(gt.one)] = NA
dp.two[is.na(gt.two)] = NA
dp.three[is.na(gt.three)] = NA
dp.four[is.na(gt.four)] = NA
dp.five[is.na(gt.five)] = NA
locus_dp_mean.libOne = rowSums(dp.one, na.rm = T)/ncol(dp.one)
locus_dp_mean.libTwo = rowSums(dp.two, na.rm = T)/ncol(dp.two)
locus_dp_mean.libThree = rowSums(dp.three, na.rm = T)/ncol(dp.three)
locus_dp_mean.libFour = rowSums(dp.four, na.rm = T)/ncol(dp.four)
locus_dp_mean.libFive = rowSums(dp.five, na.rm = T)/ncol(dp.five)
head(locus_dp_mean.libOne)
range(locus_dp_mean.libOne)
range(locus_dp_mean.libTwo)
range(locus_dp_mean.libThree)
range(locus_dp_mean.libFour)
range(locus_dp_mean.libFive)
mean(locus_dp_mean.libOne)
mean(locus_dp_mean.libTwo)
mean(locus_dp_mean.libThree)
mean(locus_dp_mean.libFour)
mean(locus_dp_mean.libFive)
median(locus_dp_mean.libOne)
median(locus_dp_mean.libTwo)
median(locus_dp_mean.libThree)
median(locus_dp_mean.libFour)
median(locus_dp_mean.libFive)
sd(locus_dp_mean.libOne)
sd(locus_dp_mean.libTwo)
sd(locus_dp_mean.libThree)
sd(locus_dp_mean.libFour)
sd(locus_dp_mean.libFive)
mean(locus_dp_mean.libOne)+(2*sd(locus_dp_mean.libOne))
mean(locus_dp_mean.libTwo)+(2*sd(locus_dp_mean.libTwo))
mean(locus_dp_mean.libThree)+(2*sd(locus_dp_mean.libThree))
mean(locus_dp_mean.libFour)+(2*sd(locus_dp_mean.libFour))
mean(locus_dp_mean.libFive)+(2*sd(locus_dp_mean.libFive))
mean(locus_dp_mean.libOne)-(1*sd(locus_dp_mean.libOne))
mean(locus_dp_mean.libTwo)-(1*sd(locus_dp_mean.libTwo))
mean(locus_dp_mean.libThree)-(1*sd(locus_dp_mean.libThree))
mean(locus_dp_mean.libFour)-(1*sd(locus_dp_mean.libFour))
mean(locus_dp_mean.libFive)-(1*sd(locus_dp_mean.libFive))
mean(locus_dp_mean.libOne)-(2*sd(locus_dp_mean.libOne))
mean(locus_dp_mean.libTwo)-(2*sd(locus_dp_mean.libTwo))
mean(locus_dp_mean.libThree)-(2*sd(locus_dp_mean.libThree))
mean(locus_dp_mean.libFour)-(2*sd(locus_dp_mean.libFour))
mean(locus_dp_mean.libFive)-(2*sd(locus_dp_mean.libFive))
library(ggplot2)
library(gridExtra)
lmiss = read.table("data/Nf/filtering_intermediates/all_libs.DPGQ_filter.lmiss", header = T)
imiss = read.table("data/Nf/filtering_intermediates/all_libs.DPGQ_filter.imiss", header = T)
head(lmiss)
head(imiss)
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,6e+05))
p1
p1 = p1 +
geom_vline(xintercept = quantile(lmiss$F_MISS, c(0.95))*100, color = "red") +
annotate(geom = "text", x = (quantile(lmiss$F_MISS, c(0.95))*100)+1, hjust = 0, y = 3e+05, label = "95th %") +
labs(title = "Before filtering for missingness")
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
lmiss = read.table("data/shared_buscos/filtering_intermediates/all_libs.DPGQ_filter.lmiss", header = T)
lmiss = read.table("data/shared_buscos/all_libs.DPGQ_filter.lmiss", header = T)
imiss = read.table("data/shared_buscos/all_libs.DPGQ_filter.imiss", header = T)
head(lmiss)
head(imiss)
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,6e+05))
p1
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") #+
#    expand_limits(x = c(0,100), y = c(0,6e+05))
p1
p1 = p1 +
geom_vline(xintercept = quantile(lmiss$F_MISS, c(0.95))*100, color = "red") +
annotate(geom = "text", x = (quantile(lmiss$F_MISS, c(0.95))*100)+1, hjust = 0, y = 3e+05, label = "95th %") +
labs(title = "Before filtering for missingness")
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
#    expand_limits(x = c(0,100), y = c(0,6e+05))
p1
755215 * 147
4063035-3742424
320611/111016605
4063035/111016605
lmiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.lmiss", header = T)
imiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.imiss", header = T)
head(lmiss)
head(imiss)
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") #+
#    expand_limits(x = c(0,100), y = c(0,6e+05))
p1
p1 = p1 +
geom_vline(xintercept = quantile(lmiss$F_MISS, c(0.95))*100, color = "red") +
annotate(geom = "text", x = (quantile(lmiss$F_MISS, c(0.95))*100)+1, hjust = 0, y = 3e+05, label = "95th %") +
labs(title = "Before filtering for missingness")
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)")
p1
p1 = p1 +
geom_vline(xintercept = quantile(lmiss$F_MISS, 0.25*100, color = "red") +
labs(title = "Before filtering for missingness")
''
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)")
p1
p1 = p1 +
geom_vline(xintercept = 0.25*100, color = "red") +
annotate(geom = "text", x = (0.25*100)+1, hjust = 0, y = 3e+05, label = "95th %") +
labs(title = "Before filtering for missingness")
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
p1
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)")
p1
p1 = p1 +
geom_vline(xintercept = 0.25*100, color = "red") +
annotate(geom = "text", x = (0.25*100)+1, hjust = 0, y = 3e+05, label = "25%") +
labs(title = "Before filtering for missingness")
p1
755216-12657
12657/755216
lmiss = read.table("data/shared_buscos/filtering_intermediates/NA_filter.loc_gt_0.25.lmiss", header = T)
lmiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.lmiss", header = T)
imiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.imiss", header = T)
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,6e+05))  +
labs(title = "After 1st locus 95th percentile filter")
p3
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
labs(title = "After locus 25% percentile filter")
p3
p1
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
labs(title = "After locus 25% percentile filter")
p3
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,6e+05))  +
labs(title = "After locus 25% percentile filter")
p3
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,5.5e+05))  +
labs(title = "After locus 25% percentile filter")
p3
lmiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.lmiss", header = T)
imiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.imiss", header = T)
head(lmiss)
head(imiss)
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)")
p1
p1 = p1 +
geom_vline(xintercept = 0.25*100, color = "red") +
expand_limits(x = c(0,100), y = c(0,5.5e+05))  +
annotate(geom = "text", x = (0.25*100)+1, hjust = 0, y = 3e+05, label = "25%") +
labs(title = "Before filtering for missingness")
p1
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
lmiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.lmiss", header = T)
imiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.imiss", header = T)
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,5.5e+05))  +
labs(title = "After locus 25% percentile filter")
p3
p4 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
geom_vline(xintercept = quantile(imiss$F_MISS, c(0.99))*100, color = "red") +
annotate(geom = "text", x = (quantile(imiss$F_MISS, c(0.99))*100)+1, hjust = 0, y = 20, label = "99th %")
p4
p4 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,60), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60))
p4
pdf("figures/quality_filtering/shared_buscos/shared_buscos.lmiss_imiss_distribution.locus_hard_filter.pdf", height = 4, width = 8)
grid.arrange(p1,p2,p3,p4, ncol = 2, widths = c(0.5,0.5))
dev.off()
lmiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.lmiss", header = T)
imiss = read.table("data/shared_buscos/INFOfilters.removed.DPGQ_filter.imiss", header = T)
head(lmiss)
head(imiss)
p1 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)")
p1
p1 = p1 +
geom_vline(xintercept = 0.25*100, color = "red") +
expand_limits(x = c(0,100), y = c(0,5.5e+05))  +
annotate(geom = "text", x = (0.25*100)+1, hjust = 0, y = 3e+05, label = "25%") +
labs(title = "Before filtering for missingness")
p1
p2 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,30), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60)) +
labs(title = "")
p2
lmiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.lmiss", header = T)
imiss = read.table("data/shared_buscos/NA_filter.loc_gt_0.25.imiss", header = T)
p3 = ggplot(lmiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing individuals per locus (%)", y = "count (SNP)") +
expand_limits(x = c(0,100), y = c(0,5.5e+05))  +
labs(title = "After locus 25% percentile filter")
p3
p4 = ggplot(imiss, aes(x = F_MISS*100)) +
geom_histogram(bins = 50) +
theme_classic() +
labs(x = "Missing loci per indidual (%)", y = "count (indv)", title = "") +
expand_limits(x = c(0,30), y = c(0,30))  +
scale_x_continuous(breaks = c(0,15,30,45,60))
p4
pdf("figures/quality_filtering/shared_buscos/shared_buscos.lmiss_imiss_distribution.locus_hard_filter.pdf", height = 4, width = 8)
grid.arrange(p1,p2,p3,p4, ncol = 2, widths = c(0.5,0.5))
dev.off()
q(save="no")
require(adegenet)
require(ape)
require(phangorn)
# read SNP multi seq aligment fasta
seqs = fasta2DNAbin(file = "data/shared_buscos/final_tables/rm_dups/FINAL_snp.snps_only.for_phylogeny.fasta")
# https://adegenet.r-forge.r-project.org/files/PRstats/practical-introphylo.1.0.pdf
# convert to phangorn format
seqs.phyDat = as.phyDat(seqs)
#initialize tree with NJ (using original DNAbinobject, not phangorn format)
#
tre.ini = nj(dist.dna(seqs, pairwise.deletion = T, model="TN93")) #must use pairwise deletion because of high number of Ns
dist.dna(seqs, pairwise.deletion = T, model="TN93")
#initialize tree with NJ (using original DNAbinobject, not phangorn format)
#
dist_mat = dist.dna(seqs, pairwise.deletion = T, model="TN93")
is.na(dist_mat)
is.na(dist_mat) %>% sum
sum(is.na(dist_mat) )
sum(!is.na(dist_mat) )
range(dist_mat)
range(dist_mat, na.rm = T)
range(dist_mat, na.rm = T)
min_dist = range(dist_mat, na.rm = T)[1]/10
min_dist
range_dist = range(dist_mat, na.rm = T)[1]
range_dist[2]/range[dist[1]
]
range_dist[2]/range_dist[1]
range_dist = range(dist_mat, na.rm = T)
range_dist[2]/range_dist[1]
?dist.dna
#initialize tree with NJ (using original DNAbinobject, not phangorn format)
#
dist_mat = dist.dna(seqs, pairwise.deletion = T, model="raw") #must use pairwise deletion because of high number of Ns
sum(is.na(dist_mat) )
sum(!is.na(dist_mat) )
range_dist = range(dist_mat, na.rm = T)
range_dist[2]/range_dist[1]
range_dist
is.na(dist_mat)
range_dist
tre.ini = nj(dist_mat)
plot(tre.ini)
?pml
#optimization
fit.ini = pml(tre.ini, seqs.phyDat, k = 4)
#this takes quite a while to run (like 30 minutes or more)
fit = optim.pml(fit.ini, optNni=T, optBf = T, optQ = T, optGamma = T)
#this takes quite a while to run (like 30 minutes or more)
fit = optim.pml(fit.ini, optNni=T, optBf = T, optQ = T, optGamma = T)
# computed
fit
fit$tree
plot(fit$tree)
anova(fit.ini,fit)
saveRDS(fit, "data/shared_buscos/phylogeny/ML_tree.rds")
saveRDS(fit, "data/shared_buscos/phylogeny/ML_tree.rds")
q(save="no")
