geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste("Watterson's ", theta)),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(all_dat.cols$global_ws.theta)/(41018940/1000),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p3
p3 = ggplot(all_dat.cols, aes(x = duration_infection, y = TajimaD.snpR)) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste("Watterson's ", theta)),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(TajimaD.snpR),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
colnames(all_dat.cols)
p3 = ggplot(all_dat.cols, aes(x = duration_infection, y = TajimaD.snpR)) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste("Watterson's ", theta)),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(all_dat.cols$TajimaD.snpR),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p3
p2 = ggplot(all_dat.cols, aes(x = duration_infection, y = global_ws.theta/(41018940/1000))) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste(theta[italic(W)], " (SNPs Kb"^-1,")")),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(all_dat.cols$global_ws.theta)/(41018940/1000),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p2
p3 = ggplot(all_dat.cols, aes(x = duration_infection, y = TajimaD.snpR)) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = "Tajima's D",
fill ="Site",
"c"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = min(all_dat.cols$TajimaD.snpR),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p3
#snpR D
plot(TajimaD.snpR ~ duration_infection, all_dat)
cor(all_dat$TajimaD.snpR, all_dat$duration_infection)
cor.test(all_dat$TajimaD.snpR, all_dat$duration_infection)
cor.test(all_dat$TajimaD.snpR, all_dat$duration_infection)
p3 = ggplot(all_dat.cols, aes(x = duration_infection, y = TajimaD.snpR)) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = "Tajima's D",
fill ="Site",
"c"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = min(all_dat.cols$TajimaD.snpR),
hjust = 0,
label = expression(paste("r = -0.34, ", italic(P), " = 0.23"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p3
p2 = ggplot(all_dat.cols, aes(x = duration_infection, y = global_ws.theta/(41018940/1000))) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste(theta[italic(W)], " (SNPs Kb"^-1,")")),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(all_dat.cols$global_ws.theta)/(41018940/1000),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p2
p2 = ggplot(all_dat.cols, aes(x = duration_infection, y = global_ws.theta/(41018940/1000))) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste(theta[italic(W)], " (SNPs Kb"^-1,")")),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = min(all_dat.cols$global_ws.theta)/(41018940/1000),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p2
p3 = ggplot(all_dat.cols, aes(x = duration_infection, y = TajimaD.snpR)) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors) +
labs(
x = "Duration infestation (years)",
y = "Tajima's D",
fill ="Site",
"c"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = min(all_dat.cols$TajimaD.snpR),
hjust = 0,
label = expression(paste("r = -0.34, ", italic(P), " = 0.23"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p3
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 7, height = 5)
grid.arrange(p1,p2,p3,widths = c(0.3,0.3,0.4))
dev.off()
library(gridExtra)
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 7, height = 5)
grid.arrange(p1,p2,p3,widths = c(0.3,0.3,0.4))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 10, height = 5)
grid.arrange(p1,p2,p3,widths = c(0.29,0.29,0.42))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 12, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.29,0.29,0.42))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 12, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.295,0.295,0.41))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 16, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.295,0.295,0.41))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 16, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.3,0.3,0.4))
dev.off()
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 16, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.31,0.31,0.38))
dev.off()
p2 = ggplot(all_dat.cols, aes(x = duration_infection, y = global_ws.theta/(41018940/1000))) +
geom_smooth(method = "lm", color="black", linetype = 2) +
geom_point(aes(fill = state), size = 3, shape = 21) +
#scale_color_manual(values = all_dat.cols$col) +
scale_fill_manual(values = all_dat.cols$colors, guide = "none") +
labs(
x = "Duration infestation (years)",
y = expression(paste(theta[italic(W)], " (SNPs Kb"^-1,")")),
fill ="Site",
"b"
) +
annotate(
geom = "text",
x = min(all_dat.cols$duration_infection),
y = max(all_dat.cols$global_ws.theta)/(41018940/1000),
hjust = 0,
label = expression(paste("r = 0.18, ", italic(P), " = 0.54"))
) +
my_gg_theme.def_size +
theme(
plot.title = element_text(hjust= -0.1, vjust = -1)
)
p2
pdf("figures/pop_gen/pixy/pi_theta_D.snpR_theta_D.pdf", width = 16, height = 4.5)
grid.arrange(p1,p2,p3,widths = c(0.31,0.31,0.38))
dev.off()
q(save="no")
library(dplyr)
library(tidyr)
library(tibble)
library(ggplot2)
source("library/ggplot_theme.txt")
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
state_n = sample_metadata.Nf %>% group_by(state) %>% summarise(n = n())
state_n %>% print(n = Inf)
#filter based on n
n_min = 4
low_n = state_n %>% filter(n < n_min) %>% pull(state)
library(dplyr)
library(tidyr)
library(geosphere)
library(vegan)
sample_metadata.Nf = read.csv("data/sample_metadata/Nf_filtered.lat_lon_dur_inf.csv")
state_n = sample_metadata.Nf %>% group_by(state) %>% summarise(n = n())
state_n %>% print(n = Inf)
#filter based on n
n_min = 4
low_n = state_n %>% filter(n < n_min) %>% pull(state)
fst = read.table("data/Nf/pixy/whole_contig_clusters_pop/pixy_fst.txt", header = T)
head(fst)
fst$chromosome %>% unique
fst_means = fst %>%
group_by(pop1, pop2) %>%
summarize(fst_mean = mean(avg_wc_fst, na.rm = T))
fst_means
dfr <- reshape(data.frame(fst_means), direction="wide", idvar="pop1", timevar="pop2")
head(dfr)
class(dfr)
dfr.ordered = dfr[order(rowSums(is.na(dfr)), decreasing = T),order(colSums(is.na(dfr)), decreasing = F)]
rownames(dfr.ordered) = dfr.ordered$pop1
#pop1 is the first col
dfr.ordered[,"pop1"] = NULL
#the colnames have extra text
colnames(dfr.ordered) = sub("fst_mean.", "", colnames(dfr.ordered))
class(dfr.ordered)
dfr.ordered %>% lower.tri()
dfr.ordered %>% upper.tri()
fst.mat = matrix(nrow = nrow(dfr.ordered)+1, ncol = ncol(dfr.ordered)+1)
fst.mat[lower.tri(fst.mat)] %>% length
dfr.ordered[!is.na(dfr.ordered)] %>% length
fst.mat[lower.tri(fst.mat)] = dfr.ordered[!is.na(dfr.ordered)]
fst.mat
#convert negative values to zero (standard for Fst where negative means there is
# more variability within than between pops and is interpreted as sample size
# effect (i.e., 1 pop has larger sample size)
fst.mat[fst.mat < 0] = 0
#full site order (1-16)
# need to add the last index of rownames to colnames
# (or the first of colnames to rownames) bc pixy outputs *unique* pairwise comps
# i.e., a lower/upper triangle comps matrix
sites_ordered = c(colnames(dfr.ordered), tail(rownames(dfr.ordered), 1))
colnames(fst.mat) = sites_ordered
rownames(fst.mat) = sites_ordered
fst.mat
fst_means
fst.dist = as.dist(fst.mat)
saveRDS(object = fst.dist, file = "data/Nf/pixy/whole_contig/fst_dist.rds")
saveRDS(object = fst.dist, file = "data/Nf/pixy/whole_contig_clusters_pop/fst_dist.rds")
fst = read.table("data/Nf/pixy/windowed_10kb/pixy_fst.contig.txt", header = T)
fst = read.table("data/Nf/pixy/whole_contig/pixy_fst.txt", header = T)
fst_means = fst %>%
group_by(pop1, pop2) %>%
summarize(fst_mean = mean(avg_wc_fst, na.rm = T))
fst_means
#########
#########
#QC.OUC to NJ is NA
fst_means %>%
filter(!pop1 %in% low_n & !pop2 %in% low_n) -> fst_means.min_n
fst_means.min_n
dfr <- reshape(data.frame(fst_means.min_n), direction="wide", idvar="pop1", timevar="pop2")
head(dfr)
fst_means %>% filter(pop2 == "CT" & pop1 == "ME.N")
class(dfr)
dfr.ordered = dfr[order(rowSums(is.na(dfr)), decreasing = T),order(colSums(is.na(dfr)), decreasing = F)]
rownames(dfr.ordered) = dfr.ordered$pop1
#pop1 is the first col
dfr.ordered[,"pop1"] = NULL
#the colnames have extra text
colnames(dfr.ordered) = sub("fst_mean.", "", colnames(dfr.ordered))
class(dfr.ordered)
dfr.ordered %>% lower.tri()
dfr.ordered %>% upper.tri()
fst.mat = matrix(nrow = nrow(dfr.ordered)+1, ncol = ncol(dfr.ordered)+1)
fst.mat[lower.tri(fst.mat)] %>% length
dfr.ordered[!is.na(dfr.ordered)] %>% length
fst.mat[lower.tri(fst.mat)] = dfr.ordered[!is.na(dfr.ordered)]
#convert negative values to zero (standard for Fst where negative means there is
# more variability within than between pops and is interpreted as sample size
# effect (i.e., 1 pop has larger sample size)
fst.mat[fst.mat < 0] = 0
#full site order (1-16)
# need to add the last index of rownames to colnames
# (or the first of colnames to rownames) bc pixy outputs *unique* pairwise comps
# i.e., a lower/upper triangle comps matrix
sites_ordered = c(colnames(dfr.ordered), tail(rownames(dfr.ordered), 1))
colnames(fst.mat) = sites_ordered
rownames(fst.mat) = sites_ordered
fst.dist = as.dist(fst.mat)
saveRDS(object = fst.dist, file = "data/Nf/pixy/whole_contig/fst_dist.rds")
###################################
###################################
fst.dist = readRDS("data/Nf/pixy/whole_contig_clusters_pop/pixy_fst.txt")
###################################
###################################
fst.dist = readRDS("data/Nf/pixy/whole_contig_clusters_pop/fst_dist.rds")
#fst.dist = readRDS("data/Nf/pixy/whole_contig/fst_dist.rds")
fst.mat = as.matrix(fst.dist)
fst.mat[upper.tri(fst.mat)] = NA
diag(fst.mat) = NA
fst.mat %>%
as.data.frame %>%
rownames_to_column("pop1") %>%
pivot_longer(-pop1, names_to = "pop2", values_to = "Fst") -> fst.df
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.914, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
fst.df
factor_order
fst.mat
fst.df
factor_order = rownames(fst.mat)
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.914, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
fst.df
?sub
sub("clust_", "cluster ", fst.df$pop1)
fst.df$pop1 = sub("clust_", "cluster ", fst.df$pop1)
fst.df$pop2 = sub("clust_", "cluster ", fst.df$pop2)
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.914, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
factor_order
factor_order = sub("clust_", "cluster ", ,factor_order)
factor_order = sub("clust_", "cluster ",factor_order)
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.914, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
pdf("figures/pop_gen/pixy/Fst_lower_tri.whole_contig_calc.PCA_clusters.pdf", width = 5, height = 5)
p2
dev.off()
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.917, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
pdf("figures/pop_gen/pixy/Fst_lower_tri.whole_contig_calc.PCA_clusters.pdf", width = 5, height = 5)
p2
dev.off()
p2 = ggplot(fst.df, # %>% filter(!is.na(Fst)),
aes(
factor(pop1, levels = rev(factor_order)),
factor(pop2, levels = factor_order),
fill = Fst)
) +
geom_tile() +
my_gg_theme.def_size +
scale_fill_gradient(low = "white", high = "red", na.value = "light grey") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "inside",
legend.position.inside = c(0.92, 0.8125),
legend.background = element_rect(color = "black"),
axis.text.x = element_text(angle = 55, hjust = 1)
)
p2
pdf("figures/pop_gen/pixy/Fst_lower_tri.whole_contig_calc.PCA_clusters.pdf", width = 5, height = 5)
p2
dev.off()
q(save="no")
q(save="no")
